name: dev

on:
  push:
    branches: ["main"]
    tags: [v*]
  pull_request:
    branches: ["main"]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: PrintGithubEnv
        run: echo 'github env is ${{ toJSON(github) }}'

      - name: Run linter
        run: make lint

  test:
    runs-on: ubuntu-latest
    if: success()
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: PrintGithubEnv
        run: echo 'github env is ${{ toJSON(github) }}'

      - name: Run tests
        run: make go-test

  publish:
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: success() && github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: PrintSecrets
        run: echo 'secrets is ${{ toJSON(secrets) }}'

      - name: PrintGithubEnv
        run: echo 'github env is ${{ toJSON(github) }}'

      - name: Publish
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        run: |
          make publish \
          GIT_MESSAGE="${{ github.event.commits[0].message }}" \
          GIT_TOKEN=${{ secrets.API_TOKEN_GITHUB }} \
          GIT_USER=${{ github.event.repository.owner.login }}  \
          GIT_EMAIL=${{ github.event.repository.owner.email }} \
          GIT_REF_TYPE=${{ github.ref_type }} \
          GIT_REF_NAME=${{ github.ref_name }}
